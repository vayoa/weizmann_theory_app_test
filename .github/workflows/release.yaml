name: Flutter Release CI

on:
  workflow_dispatch:
  push:

jobs:
  check-release:
    runs-on: ubuntu-latest
    outputs:
      run-build: ${{ env.RUN_BUILD }}
      version: v${{ env.BUILD_VERSION }}
    steps:
      # required for checking out a repo.
      - uses: actions/checkout@v2
      # read the pubspec version.
      - id: read-version
        uses: NiklasLehnfeld/flutter-version-number-action@main
        with:
          file-path: pubspec.yaml
      # read the latest release tag.
      - id: keydb
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: ${{ github.repository }}
          excludes: draft
      - name: "Echo Variables"
        run: echo "Current version $BUILD_VERSION, latest release $RELEASE. Create a new build - $RUN_BUILD."
        env:
          RELEASE: a
          # output the version with a v prefixed.
          BUILD_VERSION: b
          # notice, the tags contain a v in them while the version from the pubspec does not...
          RUN_BUILD: ${{ env.RELEASE != env.BUILD_VERSION }}

  build-and-release-windows:
    runs-on: windows-latest
    needs: check-release
    # runs only if the release was found to be higher.
    if: needs.check-release.outputs.run-build == 'true'
    steps:
      - name: "Set Version Env"
        run: echo "Building $B_V."
        env:
          B_V: needs.check-release.outputs.version
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: Install project dependencies
        run: flutter pub get
      - name: Build artifacts
        run: flutter build windows --release
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: WeizmannTheory.zip
          directory: build/windows/runner/Release
      - name: Windows Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: build/windows/runner/Release/WeizmannTheory.zip
          tag: ${{ env.B_V }}
          token: ${{ secrets.G_TOKEN }}
          generateReleaseNotes: true
          prerelease: ${{ contains(env.B_V, '-b') }}